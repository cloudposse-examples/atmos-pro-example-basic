name: GitHub OIDC to Atmos Pro Test

on:
  workflow_dispatch:

jobs:
  test-auth-flow:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # Required to request the OIDC token
      contents: read # Optional, adjust as needed

    steps:
      - name: Get GitHub OIDC Token for atmos-pro.com
        id: get_token
        run: |
          echo "Fetching OIDC token..."
          token=$(curl -sSL \
            -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
            "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=atmos-pro.com" | jq -r .value)
          echo "token=$token" >> $GITHUB_OUTPUT

      - name: Submit OIDC Token to Ngrok Auth API
        id: get_atmos_token
        run: |
          echo "Authenticating with atmos-pro..."
          response=$(curl -sSL -X POST https://ngrok.mattcalhoun.com/api/v1/auth/github-oidc \
            -H "Content-Type: application/json" \
            -d '{
              "token": "'"${{ steps.get_token.outputs.token }}"'",
              "workspaceId": "ws_2aoRV8cSHdXktFYVqDB7pASf9iiR"
            }')

          echo "Auth API response:"
          echo "$response" | jq .

          atmos_token=$(echo "$response" | jq -r .data.token)
          echo "Extracted token length: ${#atmos_token}"
          echo "atmos_token=$atmos_token" >> $GITHUB_OUTPUT

      - name: Call /api/v1/test with Atmos Pro Token
        run: |
          echo "Calling /api/v1/test..."
          response=$(curl -sSL https://ngrok.mattcalhoun.com/api/v1/test \
            -H "Authorization: Bearer ${{ steps.get_atmos_token.outputs.atmos_token }}")

          # Check if success is false
          success=$(echo "$response" | jq -r .success)
          if [ "$success" = "false" ]; then
            echo "Test API call failed:"
            echo "$response" | jq .
            exit 1
          fi

          echo "Test API call successful"
          echo "$response" | jq .
