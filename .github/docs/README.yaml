name: atmos-pro-example-basic

license: APACHE2

github_repo: cloudposse-examples/atmos-pro-example-basic

description: |-
  A basic example demonstrating how to use Atmos Pro with GitHub Actions for infrastructure deployment. This repository shows the minimal configuration needed to get started with Atmos Pro workflows.

introduction: |-
  This is a basic example repository that demonstrates how to use Atmos Pro with GitHub Actions for infrastructure deployment. It provides a minimal setup to help you understand the core concepts of Atmos Pro workflows.

  For comprehensive documentation and advanced features, visit [atmos-pro.com/docs](https://atmos-pro.com/docs).

usage: |-

  This example demonstrates the minimal configuration needed to use Atmos Pro with GitHub Actions. The workflow follows these steps:

  ## On Pull Requests: Atmos Pro Triggers `atmos terraform plan`

  When you create or update a pull request, Atmos Pro automatically handles the planning process:

  1. **Developer Makes a Change** - You modify your infrastructure code
  2. **Code Is Pushed to Feature Branch** - Changes are committed and pushed
  3. **GitHub Actions Trigger Atmos Affected Stacks** - Atmos identifies which stacks are affected by your changes
  4. **Atmos Uploads Affected Stacks** - The affected stack configurations are uploaded to Atmos Pro
  5. **Atmos Pro Dispatches Plan Workflows** - Atmos Pro automatically runs `atmos terraform plan` for affected components
  6. **Atmos Pro Updates Status Comment** - Results are posted as a comment on your pull request

  This gives you visibility into what changes will be made to your infrastructure before merging.

  ## On Merged Pull Requests: Atmos Pro Triggers `atmos terraform apply`

  When you merge a pull request, Atmos Pro automatically handles the deployment:

  1. **Pull Request Is Merged** - Your changes are merged into the main branch
  2. **GitHub Actions Trigger Atmos Affected Stacks** - Atmos identifies which stacks need to be updated
  3. **Atmos Uploads Affected Stacks** - The affected stack configurations are uploaded to Atmos Pro
  4. **Atmos Pro Dispatches Apply Workflows** - Atmos Pro automatically runs `atmos terraform apply` for affected components
  5. **Atmos Pro Updates Status Comment** - Deployment results are posted as a comment on the merged PR

  This ensures your infrastructure changes are automatically deployed when code is merged.

  ## Configuration

  The minimal configuration includes:
  - `atmos.yaml` - Main Atmos configuration file
  - `.github/workflows/` - GitHub Actions workflows for plan and apply
  - `components/` - Your infrastructure components (Terraform root modules)
  - `stacks/` - Atmos stack configurations

  ## Required GitHub Variables

  You'll need to configure the following GitHub variables in your repository settings:

  - `ATMOS_PRO_WORKSPACE_ID` - Your Atmos Pro workspace ID
  - `ATMOS_VERSION` - The version of Atmos to use (e.g., `1.181.0`)
  - `ATMOS_CONFIG_PATH` - Path to your Atmos configuration file (e.g., `atmos.yaml`)

  For more detailed configuration options and advanced features, refer to the [Atmos Pro documentation](https://atmos-pro.com/docs).

contributors: []
